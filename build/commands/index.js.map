{"version":3,"sources":["index.js"],"names":["open","require","toggleMachine","id","initial","on","RETURN_TO_IDLE","states","idle","KEYPRESS_o","r","OpeningLink","KEYPRESS_s","target","actions","Restart","no","yes","Restarting","openLink","context","event","useKeyHandler","keyHandler","stdin","setRawMode","StdinContext","off","useTerminalResize","stdout","StdoutContext","sizes","setSizes","columns","rows","Header","children","Error","Warning","CLI","props","current","send","service","forEach","action","type","lastKey","setKey","keypress","value","width","height","JSON","stringify","repeat"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\nimport { Box, Text, Color, StdinContext, StdoutContext } from \"ink\"\nimport { useMachine } from \"@xstate/react\"\nimport { Machine } from \"xstate\"\nconst open = require(\"open\")\n\nconst toggleMachine = Machine({\n  id: \"cli\",\n  initial: \"idle\",\n  on: {\n    RETURN_TO_IDLE: `idle`,\n  },\n  states: {\n    idle: {\n      id: \"idle\",\n      states: {},\n      on: {\n        KEYPRESS_o: `OpeningLink`,\n        r: \"#Restart\",\n      },\n    },\n    OpeningLink: {\n      states: {},\n      on: {\n        KEYPRESS_s: {\n          target: `idle`,\n          actions: `openLink`,\n        },\n      },\n    },\n    Restart: {\n      id: \"Restart\",\n      states: {},\n      on: { no: \"#idle\", yes: \"#Restarting\" },\n    },\n    Restarting: { id: \"Restarting\", states: {} },\n  },\n  actions: {\n    openLink: (context, event) => {\n      open(`http://localhost:8001`)\n    },\n  },\n})\n\nconst useKeyHandler = keyHandler => {\n  const { stdin, setRawMode } = useContext(StdinContext)\n\n  useEffect(() => {\n    setRawMode(true)\n    stdin.on(\"data\", keyHandler)\n    return () => {\n      stdin.off(\"data\", keyHandler)\n      setRawMode(false)\n    }\n  }, [stdin, setRawMode])\n}\n\nconst useTerminalResize = () => {\n  const { stdout } = useContext(StdoutContext)\n  const [sizes, setSizes] = useState([stdout.columns, stdout.rows])\n  useEffect(() => {\n    stdout.on(\"resize\", () => {\n      setSizes([stdout.columns, stdout.rows])\n    })\n    return () => {\n      stdout.off(\"resize\")\n    }\n  }, [stdout])\n\n  return sizes\n}\n\n// Ideas\n// state machine — press command and ask for confirmation at bottom\n// shortcuts — \"o\" then \"s\" to open site. \"o\" then \"g\" to open graphql, etc.\n// could highlight links when click o for example\n\nconst Header = ({ children }) => (\n  <Box>\n    <Color bgBlue black>\n      {children}\n    </Color>\n  </Box>\n)\n\nconst Error = ({ children }) => (\n  <Color bgRed black>\n    {children}\n  </Color>\n)\nconst Warning = ({ children }) => (\n  <Color bgYellow black>\n    {children}\n  </Color>\n)\n\nconst CLI = props => {\n  const [current, send, service] = useMachine(toggleMachine)\n  // Run any actions\n  current.actions.forEach(action => {\n    if (action.type === `openLink`) {\n      open(`http://localhost:8001`)\n    }\n    // service.actions[action.type](current.context, current.event)\n  })\n\n  const [lastKey, setKey] = useState(``)\n  useKeyHandler(keypress => {\n    // Work around xstate's lack of catch all\n    if (current.value === `OpeningLink` && keypress !== `s`) {\n      send(`RETURN_TO_IDLE`)\n    } else {\n      send(`KEYPRESS_${keypress}`)\n    }\n\n    setKey(keypress)\n  })\n  const [width, height] = useTerminalResize()\n\n  return (\n    <Box flexDirection=\"column\" marginTop={1}>\n      <Box flexDirection=\"row\" justifyContent=\"space-between\">\n        <Box flex={2} flexDirection=\"column\">\n          <Error>errors</Error>\n          <Warning>warnings</Warning>\n          <Box flex={1}>\n            width: {width}, height: {height}\n          </Box>\n          <Box>Last key ({lastKey})</Box>\n          <Box>Toggle: {JSON.stringify(current.value, null, 4)}</Box>\n        </Box>\n        <Box flex={1} flexDirection=\"column\">\n          <Header>Links</Header>\n          <Box>https://localhost:8000</Box>\n          <Box>https://localhost:8000/___graphql</Box>\n          <Box>{` `}</Box>\n          <Header>Commands</Header>\n          <Box>[r] restart \"gatsby develop\" process</Box>\n          <Box>[o] open links</Box>\n          <Box>[s] shadow theme components</Box>\n        </Box>\n      </Box>\n      <Box>{` `}</Box>\n      <Box>{` `}</Box>\n      <Box textWrap={`truncate`}>{\"—\".repeat(width)}</Box>\n      <Box height={1} flexDirection=\"row\">\n        <Color bgGreen black>\n          RESTART NEEDED [r]\n        </Color>\n        {` | `}\n        <Error>1 error</Error>\n        {` | `}\n        <Warning>2 warnings</Warning>\n        {` | `}\n        <Color>117 pages</Color>\n        <Box flexGrow={1} />\n        <Color>Kyle's cool blog</Color>\n      </Box>\n    </Box>\n  )\n}\n\nexport default CLI\n"]}